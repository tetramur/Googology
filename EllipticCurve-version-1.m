(* ::Package:: *)

(* ::Input:: *)
(*EE:=EllipticCurve[0,0,1,-79,342]*)
(**)
(*WeierstrassModel:={0,0,0,-27*c4,-54*c6}*)
(**)
(*MinWeierstrassEq:=(y^2+EE[[1]]*x*y+EE[[3]]*y-x^3-EE[[2]]*x^2-EE[[4]]*x-EE[[5]])*)
(**)
(*NonextendedModel:=Expand[(x^3+b2/4*x^2+b4/2*x+b6/4)/.x->(x-b2/12)]*)
(**)
(*b2:=EE[[1]]^2+4EE[[2]]*)
(**)
(*b4:=EE[[1]]*EE[[3]]+2EE[[4]]*)
(**)
(*b6:=EE[[3]]^2+4EE[[5]]*)
(**)
(*b8:=EE[[1]]^2*EE[[5]]-EE[[1]]*EE[[3]]*EE[[4]]+EE[[2]]*EE[[3]]^2+*)
(*4*EE[[2]]*EE[[5]]-EE[[4]]^2*)
(**)
(*c4:=b2^2-24b4*)
(**)
(*c6:=-b2^3+36b2*b4-216b6*)
(**)
(*CurveDiscriminant:=-b2^2*b8+9b2*b4*b6-8b4^3-27b6^2*)
(**)
(*Delta:=CurveDiscriminant*)
(**)
(*JInvariant:=c4^3/Delta*)
(**)
(*PointReflect[{x1_,y1_}]:=*)
(*Flatten[{{x1,y1}[[1]],y/.Solve[{(MinWeierstrassEq/.x->x1)==0,y!=y1},y]}]*)
(**)
(*PointCurveNegAdd[{x1_,y1_},{x2_,y2_}]:=Flatten[{x,y}/.Solve[{MinWeierstrassEq==0,y-y1==(y2-y1)/(x2-x1)*(x-x1),*)
(*x!=x1,x!=x2},{x,y}]]*)
(**)
(*PointNegativeDouble[{x1_,y1_}]:=Flatten[{x,y}/.Solve[{MinWeierstrassEq==0,*)
(*y-y1==-((D[MinWeierstrassEq,x]/D[MinWeierstrassEq,y])/.(x->x1)/.(y->y1))**)
(*(x-x1),x!=x1},{x,y}]]*)
(**)
(*CurveAdd[point1_,point2_]:=Which[point1===InfinityPoint,point2,*)
(*point2===InfinityPoint,point1,*)
(*point2==PointReflect[point1],InfinityPoint,*)
(*point1[[1]]!=point1[[2]],PointReflect[PointCurveNegAdd[point1,point2]],*)
(*point1==point2,PointReflect[PointNegativeDouble[point1]]]*)
(**)
(*CurveMulNum[point_,n_]:=Which[n==0,{0,0},n==1,point,n>1,*)
(*CurveAdd[point,CurveMulNum[point,n-1]],True,*)
(*PointReflect[CurveMulNum[point,-n]]]*)
(**)
(*CurveRecursDouble[{x1_,y1_},n_]:=CurveRecursDouble[{x1,y1},n]=*)
(*If[n==0,{x1,y1},CurveAdd[CurveRecursDouble[{x1,y1},n-1],*)
(*CurveRecursDouble[{x1,y1},n-1]]]*)
(**)
(*MultiList[u1_,u2_]:=Sort[Flatten[Table[u1*(u2[[n]]),{n,1,Length[u2]}]]]*)
(**)
(*TorsionPointCndd:=Join[{0},(Select[Divisors[Delta],IntegerQ[#^(1/2)]&])^(1/2)]*)
(**)
(*TorsionPoint:=Flatten[Select[Table[If[*)
(*Length[Solve[(MinWeierstrassEq/.(y->TorsionPointCndd[[n]]))==0,*)
(*x,Integers]]==0,0,*)
(*Join[{#},{TorsionPointCndd[[n]]}]&/@*)
(*(x/.Solve[(MinWeierstrassEq/.(y->TorsionPointCndd[[n]]))==0,x,Integers])],*)
(*{n,1,Length[TorsionPointCndd]}],Head[#]==List&],1]*)
(**)
(*TorsionOrder:=*)
(*Min[FirstPosition[Table[CurveMulNum[{0,0},n]==InfinityPoint,{n,1,16}],True]]*)
(*TorsionGroup:=CyclicGroup[TorsionOrder]*)
(**)
(*BadReductionPrimes:=#[[1]]&/@FactorInteger[Abs[Delta]]*)
(**)
(*AdditiveBReducPrimes:=BadReductionPrimes[[#]]&/@Flatten[Position[IntegerQ[#]&/@(c4/BadReductionPrimes),True]]*)
(**)
(*MultplBReducPrimes:=Select[BadReductionPrimes[[#]]&/@Flatten[Position[!IntegerQ[#]&/@(c4/BadReductionPrimes),True]],#>=5&]*)
(**)
(*SplitMultBReducPrimes:=Select[MultplBReducPrimes,PowerMod[-c6,(#-1)/2,#]==1&]*)
(**)
(*NSplitMultBReducPrimes:=Select[MultplBReducPrimes,PowerMod[-c6,(#-1)/2,#]==#-1&]*)
(**)
(*AuxRealPeriod[aa4_,aa6_]:=*)
(*Re[(t/.FindRoot[WeierstrassP[t,{-4*aa4,-4*aa6}]==*)
(*Max[Select[x/.Solve[x^3+aa4*x+aa6==0,x],Im[#]==0&]],{t,1/(Abs[c6])^(1/6)},WorkingPrecision->2*30])*2]*)
(**)
(*RealPeriod:=If[Delta>0,2,1]**)
(*AuxRealPeriod[Delete[Take[*)
(*Reverse[CoefficientList[Expand[(x^3+b2/4*x^2+b4/2*x+b6/4)/.x->(x-b2/12)],x]],*)
(*{-2,-1}],0]]*)
(**)
(*HeightApprox[{x1_,y1_},k_]:=Block[{t=CurveMulNum[{x1,y1},k][[1]]},*)
(*N[Log[Max[{Numerator[t],Denominator[t]}]]/k^2]]*)
(**)
(*PairHeightApprox[{x1_,y1_},{x2_,y2_},k_]:=*)
(*1/2*(HeightApprox[CurveAdd[{x1,y1},{x2,y2}],k]-*)
(*(HeightApprox[{x1,y1},k]+HeightApprox[{x2,y2},k]))*)
(**)
(*NEp[p_]:=1+Length[Solve[y^2+EE[[1]]*x y+EE[[3]]*y==x^3+EE[[2]]*x^2+EE[[4]]*x+EE[[5]],*)
(*{x,y},Modulus->p]]*)
(**)
(*ProductL[p_,s_]:=Which[Mod[Delta,p]!=0,1-(p+1-NEp[p])*p^(-s)+p^(1-2s),Mod[Delta,p]==0&&Mod[c4,p]==0,1,*)
(*Mod[Delta,p]==0&&Mod[c4,p]!=0&&PowerMod[Mod[-c6,p],(p-1)/2,p]==1,1-p^(-s),*)
(*Mod[Delta,p]==0&&Mod[c4,p]!=0&&PowerMod[Mod[-c6,p],(p-1)/2,p]==p-1,1+p^(-s)]*)
